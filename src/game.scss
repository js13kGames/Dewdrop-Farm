$plotColor: rgb(20, 160, 46);
$fontColor: rgb(59, 23, 37);
$tileWidth: 4.8rem;
$tileHeight: 4.8rem;

@mixin crop($name, $row) {
  @for $i from 1 through 6 {
    .#{$name}.stage#{$i} {
      background-position-x: (($i - 6) * $tileWidth);
      background-position-y: (-1 * $row * $tileHeight);
    }
  }
}

@mixin textWithShadow() {
  font-size: 1.6rem;
  font-weight: bold;
}

/* RESET */
* {
  cursor: default;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  image-rendering: optimizeSpeed;
  image-rendering: -moz-crisp-edges;
  image-rendering: -webkit-optimize-contrast;
  image-rendering: optimize-contrast;
  image-rendering: pixelated;
}

html {
  font-weight: normal;
  font-size: 62.5%;
  font-family: 'Goudy Old Style', 'Garamond', 'Big Caslon', 'Times New Roman', serif;
  background: $plotColor;
  color: $fontColor;
}

a, a:visited {
  color: inherit;
  text-decoration: none;
}

/* SCREEN */
.world {
  /* Usable area on an iPhone SE is 320x444 pixels */
  width: 32rem;
  min-height: 44.4rem;
  /*
  height: 44.4rem;
  overflow: hidden;
  border: 1px solid cyan;
  */
}

.row {
  display: flex;
  flex-direction: row;
}

.col {
  display: flex;
  flex-direction: column;
}

.center {
  display: flex;
  justify-content: center;
  align-items: center;
}

.buffer {
  min-height: (6 * $tileHeight);
  flex-grow: 1;
}

/* FARM */
.tile {
  display: inline-flex;
  width: $tileHeight;
  height: $tileHeight;
  background-size: (6 * $tileWidth) (15 * $tileHeight);
  background-image: url('../img/tiles2.png');
  background-position-x: (0 * $tileWidth);
  background-position-y: (-3 * $tileHeight);
}

.farm {
  flex-grow: 1;
}

.farm > .row {
  justify-content: center;
  align-items: center;
}

.plot {
  display: grid;
  background-position-x: (-5 * $tileWidth);
  background-position-y: (0 * $tileHeight);
}

.plot > .ground,
.plot > .water,
.plot > .crop,
.plot > .animal {
  grid-area: 1 / 1 / -1 / -1;
}

.plot > .crop,
.plot > .animal {
  z-index: 1;
}

.stage0000 {
  background-position-x: (-5 * $tileWidth);
  background-position-y: (0 * $tileHeight);
}
.stage1111 {
  background-position-x: (-5 * $tileWidth);
  background-position-y: (0 * $tileHeight);
}
.till.stage0000 {
  background-position-x: (0 * $tileWidth);
  background-position-y: (0 * $tileHeight);
}
.till.stage0001 {
  background-position-x: (-2 * $tileWidth);
  background-position-y: (-1 * $tileHeight);
}
.till.stage0010 {
  background-position-x: (-1 * $tileWidth);
  background-position-y: (-0 * $tileHeight);
}
.till.stage0011 {
  background-position-x: (-5 * $tileWidth);
  background-position-y: (-1 * $tileHeight);
}
.till.stage0100 {
  background-position-x: (0 * $tileWidth);
  background-position-y: (-1 * $tileHeight);
}
.till.stage0101 {
  background-position-x: (0 * $tileWidth);
  background-position-y: (-2 * $tileHeight);
}
.till.stage0110 {
  background-position-x: (-4 * $tileWidth);
  background-position-y: (-1 * $tileHeight);
}
.till.stage0111 {
  background-position-x: (-3 * $tileWidth);
  background-position-y: (-2 * $tileHeight);
}
.till.stage1000 {
  background-position-x: (-1 * $tileWidth);
  background-position-y: (-2 * $tileHeight);
}
.till.stage1001 {
  background-position-x: (-5 * $tileWidth);
  background-position-y: (-2 * $tileHeight);
}
.till.stage1010 {
  background-position-x: (-2 * $tileWidth);
  background-position-y: (-2 * $tileHeight);
}
.till.stage1011 {
  background-position-x: (-2 * $tileWidth);
  background-position-y: (0 * $tileHeight);
}
.till.stage1100 {
  background-position-x: (-4 * $tileWidth);
  background-position-y: (-2 * $tileHeight);
}
.till.stage1101 {
  background-position-x: (-3 * $tileWidth);
  background-position-y: (-1 * $tileHeight);
}
.till.stage1110 {
  background-position-x: (-3 * $tileWidth);
  background-position-y: (0 * $tileHeight);
}
.till.stage1111 {
  background-position-x: (-1 * $tileWidth);
  background-position-y: (-1 * $tileHeight);
}
.tile.water {
  background-position-x: (-4 * $tileWidth);
  background-position-y: (-3 * $tileHeight);
}
.tile.seeds {
  background-position-x: (-3 * $tileWidth);
  background-position-y: (-3 * $tileHeight);
}
.tile.hoe {
  background-position-x: (-2 * $tileWidth);
  background-position-y: (-3 * $tileHeight);
}
.tile.can {
  background-position-x: (-1 * $tileWidth);
  background-position-y: (-3 * $tileHeight);
}
.tile.sprinkler {
  background-position-x: (-5 * $tileWidth);
  background-position-y: (-4 * $tileHeight);
}
.tile.bunny {
  background-position-x: (-4 * $tileWidth);
  background-position-y: (-4 * $tileHeight);
}
.tile.crop.stage-1 {
  background-position-x: (-3 * $tileWidth);
  background-position-y: (-4 * $tileHeight);
}

@include crop('turnip', 5);
@include crop('chile', 6);
@include crop('tomato', 7);
@include crop('eggplant', 8);
@include crop('strawberry', 9);
@include crop('potato', 10);
@include crop('corn', 11);
@include crop('grape', 12);
@include crop('cassava', 13);
@include crop('avocado', 14);

/* STATS */
.stats {
  justify-content: space-between;
  align-items: center;
  font-size: 1.6rem;
}

/* STORE */
.cash {
  display: flex;
  flex-direction: row;
  align-items: center;
  @include textWithShadow();

  .tile {
    margin-left: 0.4rem;
  }
}

.tile.cash {
  transform: scale(0.75);
  background-position-x: (-5 * $tileWidth);
  background-position-y: (-3 * $tileHeight);
}

$storeBorder: rgb(113, 65, 59);
$storeBackground: rgb(228, 210, 170);
$itemBorder: rgb(113, 65, 59);
$itemBackground: rgb(244, 210, 156);
$itemDetailBorder: rgb(187, 117, 71);
$itemDetailBackground: rgb(219, 164, 99);

/* MARKET */
.store,
.market {
  background: $storeBackground;
  border: 0.1rem solid $storeBorder;

  > .slot {
    margin: 0.1rem;
  }

  > .item {
    justify-content: space-between;

    > .crop {
      align-items: center;
      position: relative;
      padding: 0.2rem 0 0.2rem 0.4rem;

      > .name {
        margin-left: 0.4rem;
        @include textWithShadow();
      }
    }
  }

  .title {
    font-size: 2.4rem;
  }

  .message {
    font-size: 1.6rem;
    padding: 0.8rem;
  }
}

.slot {
  background-color: $itemBackground;
  border: 0.1rem solid $itemBorder;
  position: relative;

  > *:first-child:before,
  > *:first-child:after,
  > *:last-child:before,
  > *:last-child:after {
    content: '';
    display: inline-block;
    position: absolute;
    width: 0.4rem;
    height: 0.4rem;
    margin: 0.1rem;
    background: $itemDetailBackground;
    border: 0.1rem solid $itemDetailBorder;
  }

  > *:first-child:before {
    top: 0;
    left: 0;
    border-bottom-right-radius: 0.4rem;
  }

  > *:first-child:after {
    bottom: 0;
    left: 0;
    border-top-right-radius: 0.4rem;
  }

  > *:last-child:before {
    top: 0;
    right: 0;
    border-bottom-left-radius: 0.4rem;
  }

  > *:last-child:after {
    bottom: 0;
    right: 0;
    border-top-left-radius: 0.4rem;
  }
}

/* CONTROLS */
.sticker {
  justify-content: center;
  align-items: center;
  width: ($tileWidth / 2);
  height: ($tileHeight / 2);
  @include textWithShadow();
  background: rgb(18, 32, 32);
  border-radius: 50%;

  > .inner {
    display: flex;
    justify-content: center;
    align-items: center;
    width: (($tileWidth / 2) - 0.4rem);
    height: (($tileHeight/ 2) - 0.4rem);
    background: rgb(254, 243, 192);
    border-radius: 50%;
  }
}

.picture {
  display: grid;
  grid-template: 50% 50% / 50% 50%;

  > .tool,
  > .crop,
  > .seeds {
    grid-area: 1 / 1 / -1 / -1;
  }

  > .sticker {
    grid-area: 2 / 1 / 2 / 1;
    z-index: 1;
  }

  > .key {
    grid-area: 1 / 2 / 1 / 2;
    margin-left: 1.2rem;
  }
}

.key {
  display: grid;
  place-items: center;
  width: 1.2rem;
  height: 1.2rem;
	font-family: 'Lucida Grande', Lucida, Arial, sans-serif;
	border-radius: .2rem;
	cursor: default;
	user-select: none;
  background: rgb(255, 255, 255);
  background: linear-gradient(0, rgb(218, 224, 234), rgb(255, 255, 255));
  color: rgb(6, 6, 8);
  text-shadow: 0 0 .2rem rgb(255, 255, 255);
  box-shadow:
  inset 0 0 .1rem rgb(255, 255, 255),
  inset 0 0 .4rem rgb(218, 224, 234),
  0 .1rem 0 rgb(139, 147, 175),
  0 .11rem 0 rgba(6, 6, 8, .4),
  0 .1rem .11rem rgba(6, 6, 8, .9);
}

.inventory {
  background: $storeBackground;
  border: 0.1rem solid $storeBorder;
  padding: 0.1rem;

  $itemShadow: rgb(160, 134, 98);
  $itemHighlight: rgb(254, 243, 192);
  $itemActiveShadow: rgb(115, 23, 45);
  $itemActiveHighlight: rgb(180, 32, 42);
  $itemBorderSize: 0.2rem;

  .slot {
    flex-grow: 1;
  }

  .slot .item {
    margin: 0.1rem;
    background: $storeBackground;
    border-top: $itemBorderSize solid $itemShadow;
    border-right: $itemBorderSize solid $itemHighlight;
    border-bottom: $itemBorderSize solid $itemHighlight;
    border-left: $itemBorderSize solid $itemShadow;
    border-radius: 0.4rem;
  }

  .slot .item.active {
    border-top: $itemBorderSize solid $itemActiveHighlight;
    border-right: $itemBorderSize solid $itemActiveShadow;
    border-bottom: $itemBorderSize solid $itemActiveShadow;
    border-left: $itemBorderSize solid $itemActiveHighlight;
  }
}
.controls {
  margin-top: 0.4rem;
  justify-content: space-around;
}

$buttonBackground: rgb(255, 213, 65);
$buttonEdgeLight: rgb(249, 163, 27);
$buttonEdgeDark: rgb(250, 106, 10);
$buttonBorder: rgb(115, 23, 45);
$buttonShadowLight: rgb(74, 84, 98);
$buttonShadowDark: rgb(20, 16, 19);
$buttonHighlight: rgb(227, 230, 255);

.button {
  display: grid;
  place-items: center;
  font-variant: small-caps;
  @include textWithShadow();
  width: $tileWidth;
  height: ($tileWidth / 1.618);
  margin: 0.4rem;
  background: $buttonBackground;
  border-radius: 0.4rem;
  border-top: 0.1rem solid $buttonEdgeLight;
  border-right: 0.1rem solid $buttonEdgeDark;
  border-bottom: 0.1rem solid $buttonEdgeDark;
  border-left: 0.1rem solid $buttonEdgeLight;
  box-shadow: 0.2rem 0.2rem $buttonShadowDark, 0.4rem 0.4rem $buttonShadowLight;
  transition: all 0.1s ease;

  &:before {
    content: '';
    width: calc(100% + (0.1rem * 2));
    height: calc(100% + (0.1rem * 2));
    grid-area: 1 / 1 / -1 / -1;
    border: 0.1rem solid $buttonBorder;
    border-radius: 0.4rem;
  }

  > .label {
    grid-area: 1 / 1 / -1 / -1;
  }

  &.active {
    transform: translate(0.2rem, 0.2rem);
    box-shadow: 0 0 $buttonShadowDark, 0 0 $buttonShadowLight;
  }
}

/* COLOPHON */
.colophon {
  margin: $tileHeight 0 0.8rem 0;
}

.colophon > a:hover {
  cursor: pointer;
  text-decoration: underline;
}

abbr[title="and"] {
  font-family: 'Adobe Caslon Pro', 'Baskerville', 'Goudy Old Style', 'Palatino',
  'Palatino Linotype', 'Book Antiqua', 'Georgia', 'Times New Roman', 'Times', serif;
  font-style: italic;
  text-decoration: none;
  font-size: 110%;
  cursor: help;
  /* Prevent `abbr` affecting the `line-height` */
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

/* UTILS */
.hidden {
  display: none !important;
}

.capitalize {
  text-transform: capitalize;
}

.small {
  transform: scale(0.75);
}

.rotate90 {
  transform: rotate(90deg);
}

.rotate180 {
  transform: rotate(180deg);
}

.rotate270 {
  transform: rotate(270deg);
}

.rotateX {
  transform: scaleX(-1);
}

@media screen and (min-width:40em) {
  html {
    font-size: 120%;
  }
}
